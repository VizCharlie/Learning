import java.util.Scanner;

public class Solution {
	static int[][] matrix, value, path;
	static int index_x, index_y, row, col;
	
	public static void getPath(int path[][]){
		index_x = row - 1;
		index_y = col - 1;
		int tempIndexX = 0, tempIndexY = 0;
		
		while( index_x > 0 || index_y > 0 ){
			System.out.println(index_x + " " + index_y);
			tempIndexX = path[index_x][index_y] / 10;
			tempIndexY = path[index_x][index_y] % 10;
			
			index_x = tempIndexX;
			index_y = tempIndexY;
		}
	}
	
//	public static void printArr(int[][] arr){
//		for(index_x = 0; index_x < row; index_x++){
//			for(index_y = 0 ; index_y < row; index_y++){
//				System.out.print(arr[index_x][index_y] + " ");
//			}
//			System.out.println();
//		}
//	}
	

	public static void createArr(int[][] matrix){
		for(index_x = 0; index_x < row; index_x++){
			for(index_y = 0 ; index_y < row; index_y++){
				if(index_x == 0 && index_y == 0){
					value[index_x][index_y] = matrix[index_x][index_y];
					path[index_x][index_y] = Integer.valueOf(String.valueOf(index_x) + String.valueOf(index_y));
				}else if(index_x == 0){
					value[index_x][index_y] = matrix[index_x][index_y] + value[index_x][index_y - 1];
					path[index_x][index_y] = Integer.valueOf(String.valueOf(index_x) + String.valueOf(index_y - 1));
				}else if(index_y == 0){
					value[index_x][index_y] = matrix[index_x][index_y] + value[index_x - 1][index_y];
					path[index_x][index_y] = Integer.valueOf(String.valueOf(index_x - 1) + String.valueOf(index_y));
				}else{
					value[index_x][index_y] = Math.max(value[index_x][index_y - 1], value[index_x - 1][index_y]) + matrix[index_x][index_y];
					if(value[index_x][index_y - 1] > value[index_x - 1][index_y]){
						path[index_x][index_y] = Integer.valueOf(String.valueOf(index_x) + String.valueOf(index_y - 1));
					}else
						path[index_x][index_y] = Integer.valueOf(String.valueOf(index_x - 1) + String.valueOf(index_y));
				}
			}
		}
	} 
	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);

		row = input.nextInt();
		col = input.nextInt();
		matrix = new int[row][col];
		value = new int[row][col];
		path = new int[row][col];
		
		for(index_x = 0; index_x < row; index_x++){
			for(index_y = 0 ; index_y < row; index_y++){
				matrix[index_x][index_y] = input.nextInt();
			}
		}
		
		createArr(matrix);
		//printArr(path);
		getPath(path); //Prints index of Rows and Columns in Reverse Order except starting (0,0).
	}

}
